name: Release

on:
  push:
    branches:
      - main
  delete:
  create:

jobs:
  Release-To-Github:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: List files in the repository
        run: |
          cd "${{ github.workspace }}"
          ls "${{ github.workspace }}"
      - name: Release SD-Trainer Installer
        shell: bash
        env:
          GITHUB_TOKEN: ${{ github.token }}
        run: |
          gh release delete-asset sd_trainer_installer sd_trainer_installer.ps1 -y || true
          gh release upload sd_trainer_installer sd_trainer_installer.ps1

      - name: Release InvokeAI Installer
        shell: bash
        env:
          GITHUB_TOKEN: ${{ github.token }}
        run: |
          gh release delete-asset invokeai_installer invokeai_installer.ps1 -y || true
          gh release upload invokeai_installer invokeai_installer.ps1

      - name: Release ComfyUI Installer
        shell: bash
        env:
          GITHUB_TOKEN: ${{ github.token }}
        run: |
          gh release delete-asset comfyui_installer comfyui_installer.ps1  -y || true
          gh release upload comfyui_installer comfyui_installer.ps1 

      - name: Release SD WebUI Installer
        shell: bash
        env:
          GITHUB_TOKEN: ${{ github.token }}
        run: |
          gh release delete-asset stable_diffusion_webui_installer stable_diffusion_webui_installer.ps1  -y || true
          gh release upload stable_diffusion_webui_installer stable_diffusion_webui_installer.ps1 

      - name: Release Fooocus Installer
        shell: bash
        env:
          GITHUB_TOKEN: ${{ github.token }}
        run: |
          gh release delete-asset fooocus_installer fooocus_installer.ps1  -y || true
          gh release upload fooocus_installer fooocus_installer.ps1 

      - name: Release config
        shell: bash
        env:
          GITHUB_TOKEN: ${{ github.token }}
        run: |
          gh release delete-asset archive configure_env.bat -y || true
          gh release upload archive configure_env.bat

          gh release delete-asset archive fooocus_config.json -y || true
          gh release upload archive fooocus_config.json

          gh release delete-asset archive fooocus_path_config_colab.json -y || true
          gh release upload archive fooocus_path_config_colab.json

          gh release delete-asset archive fooocus_path_config_kaggle.json -y || true
          gh release upload archive fooocus_path_config_kaggle.json

          gh release delete-asset archive fooocus_zh_cn.json -y || true
          gh release upload archive fooocus_zh_cn.json

          gh release delete-asset archive libtcmalloc_minimal.so.4 -y || true
          gh release upload archive libtcmalloc_minimal.so.4

          gh release delete-asset archive sd_webui_config.json -y || true
          gh release upload archive sd_webui_config.json

      - name: Release Jupyter Notebook
        shell: bash
        env:
          GITHUB_TOKEN: ${{ github.token }}
        run: |
          gh release delete-asset archive install_embed_python.ps1 -y || true
          gh release upload archive install_embed_python.ps1

          gh release delete-asset archive sd_scripts_kaggle.ipynb -y || true
          gh release upload archive sd_scripts_kaggle.ipynb

          gh release delete-asset archive sd_webui_all_in_one_colab.ipynb -y || true
          gh release upload archive sd_webui_all_in_one_colab.ipynb

          gh release delete-asset archive sd_webui_all_in_one.ipynb -y || true
          gh release upload archive sd_webui_all_in_one.ipynb

          gh release delete-asset archive sd_trainer_kaggle.ipynb -y || true
          gh release upload archive sd_trainer_kaggle.ipynb

          gh release delete-asset archive fooocus_colab.ipynb -y || true
          gh release upload archive fooocus_colab.ipynb

          gh release delete-asset archive fooocus_kaggle.ipynb -y || true
          gh release upload archive fooocus_kaggle.ipynb

  Release-To-Gitee:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: List files in the repository
        run: |
          cd "${{ github.workspace }}"
          ls "${{ github.workspace }}"
      - name: Config release Gitee script requirements
        shell: bash
        run: |
          pip install requests requests-toolbelt --break-system-package
      - name: Release config script to Gitee
        shell: bash
        env:
          gitee_owner: licyk
          gitee_repo: sd-webui-all-in-one
          gitee_token: ${{ secrets.gitee_token }}
          gitee_release_id: 435278
          gitee_upload_retry_times: 3
          gitee_files: |
              configure_env.bat
        run: |
          python "${{ github.workspace }}/.github/gitee_release.py"

      - name: Release SD-Trainer Installer to Gitee
        shell: bash
        env:
          gitee_owner: licyk
          gitee_repo: sd-webui-all-in-one
          gitee_token: ${{ secrets.gitee_token }}
          gitee_release_id: 408873
          gitee_upload_retry_times: 3
          gitee_file_path: "${{ github.workspace }}/sd_trainer_installer.ps1"
          gitee_file_name: sd_trainer_installer.ps1
          # gitee_files: |
          #     sd_trainer_installer.ps1
        run: |
          python "${{ github.workspace }}/.github/gitee_release.py"

      - name: Release InvokeAI Installer to Gitee
        shell: bash
        env:
          gitee_owner: licyk
          gitee_repo: sd-webui-all-in-one
          gitee_token: ${{ secrets.gitee_token }}
          gitee_release_id: 402883
          gitee_upload_retry_times: 3
          gitee_file_path: ${{ github.workspace }}
          gitee_file_name: invokeai_installer.ps1
          # gitee_files: |
          #     invokeai_installer.ps1
        run: |
          python "${{ github.workspace }}/.github/gitee_release.py"
